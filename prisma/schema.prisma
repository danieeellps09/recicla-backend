datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "linux-musl", "debian-openssl-1.1.x"]
}

model User {
  id         Int @id @default(autoincrement())
  password   String @db.VarChar(255)
  email      String @db.VarChar(255) @unique
  phone      String @db.VarChar(255)
  name       String @db.VarChar(255)
  status     Boolean  
  createdAt  DateTime @default(now()) @db.Timestamp() @map(name: "created_at")
  updatedAt  DateTime @updatedAt @db.Timestamp() @map(name: "updated_at")
  role       UserRole[]
  catador    Catador?    @relation("CatadorToUser")
  associacao Associacao? @relation("AssociacaoToUser")
  administrador Administrador? @relation("AdministradorToUser")



  @@map("users")
}

model UserRole {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @unique @db.VarChar(255)
  description String     @db.VarChar(255)
  status      Boolean
  createdAt   DateTime   @default(now()) @map(name: "created_at") @db.Timestamp()
  updatedAt   DateTime   @updatedAt @map(name: "updated_at") @db.Timestamp()
  users       UserRole[]

  @@map("roles")
}

model Catador {
  id                  Int     @id @default(autoincrement())
  userId              Int     @unique
  associacaoId        Int  
  generoId            Int   
  etniaId             Int 
  cpf        String @db.VarChar(14) @unique
  bairro     String @db.VarChar(255)
  endereco   String @db.VarChar(255)
  @@map("catadores")
  user                 User   @relation("CatadorToUser",fields: [userId], references: [id])
  associacao           Associacao @relation("CatadorToAssociacao", fields: [associacaoId], references: [id])
  genero               Genero @relation("GeneroToCatador", fields: [generoId], references: [id])
  etnia                Etnia  @relation("EtniaToCatador", fields: [etniaId], references: [id])
  coletas              Coleta[] @relation("CatadorToColeta")

}

model Genero {
  id  Int @id @default(autoincrement())
  nomenclatura  String @db.VarChar(50) @unique
  @@map("genero")

  catador Catador[] @relation("GeneroToCatador")
}

model Etnia {
  id  Int @id @default(autoincrement())
  nomenclatura  String @unique @db.VarChar(50)
  @@map("etnia")

  catador Catador[] @relation("EtniaToCatador")
}

model Veiculo {
  id          Int      @id @default(autoincrement())
  nomeVeiculo String?  @unique @db.VarChar(255)
  coletas     Coleta[]

  @@map("veiculos")
}

model Associacao {
  id       Int    @id @default(autoincrement())
  userId   Int    @unique
  cnpj  String    @unique
  bairro String
  endereco String
  coletas  Coleta[]
  venda    Venda[]


  @@map("associacoes")
  user            User      @relation("AssociacaoToUser", fields: [userId], references: [id])

  catador Catador[] @relation("CatadorToAssociacao")
}

model Material {
  id   Int    @id @default(autoincrement())
  nome String @unique @db.VarChar(255)

  @@map("materiais")
}

model Administrador {
  id Int @id @default(autoincrement())
  userId Int @unique
  cpf String @db.VarChar(14) @unique
  user   User @relation("AdministradorToUser", fields: [userId], references: [id])

  @@map("administrador")
}

model Coleta {
  id           Int        @id @default(autoincrement())
  quantidade   Int
  pergunta     Boolean
  motivo       String
  numRota      Int
  idCatador    Int        @map("idCatador")
  idAssociacao Int        @map("idAssociacao")
  idVeiculo    Int        @map("idVeiculo")
  catador Catador @relation("CatadorToColeta", fields: [idCatador], references: [id])
  associacao   Associacao @relation(fields: [idAssociacao], references: [id])
  veiculo      Veiculo    @relation(fields: [idVeiculo], references: [id])
  dataColeta   DateTime   @default(now())

  @@map("coletas")
}

model Venda {
  id                Int @id @default(autoincrement())
  idAssociacao      Int        @map("idAssociacao")
  empresaCompradora String
  qtdVendida        Int
  notaFiscal        String      @unique
  associacao        Associacao @relation(fields: [idAssociacao], references: [id])
  dataVenda        DateTime   @default(now())

  @@map("vendas")
}